usethis::user("combine")
usethis::use_r("combine")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
usethis::use_r("convert_ATS")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
usethis::use_r("convert_vec")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
usethis::use_r("latest")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
usethis::use_r("create_gpx")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
usethis::use_r("update_database")
devtools::load_all(".")
devtools::load_all(".")
library(collardata)
file.show("DESCRIPTION")
devtools::load_all(".")
library(collardata)
usethis::use_r("create_gpx")
devtools::load_all(".")
library(collardata)
usethis::use_r("read_files")
devtools::load_all(".")
library(collardata)
usethis::use_r("convert_format")
devtools::load_all(".")
library(collardata)
usethis::use_r("latest")
devtools::load_all(".")
library(collardata)
usethis::use_r("greate_gpx")
usethis::use_r("create_gpx")
devtools::load_all(".")
require(devtools)
requier(testthat)
require(covr)
require(testthat)
require(usethis)
require(roxygen2)
devtools::load_all(".")
devtools::load_all(".")
require(roxygen2)
devtools::load_all(".")
require(collardata)
# Install and load packages:
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("testthat", "covr", "usethis", "roxygen2")
ipak(packages)
install_github("foresthayes/collardata")
devtools::install_github("foresthayes/collardata")
install.packages("lubridate")
devtools::install_github("foresthayes/collardata")
devtools::load_all(".")
packages <- c("testthat", "covr", "usethis", "roxygen2")
ipak(packages)
install.packages("roxygen2")
require(roxygen2)
library("roxygen2")
install.packages("stringi", type = source)
install.packages("stringi", type = "source")
require(roxygen2)
install.packages(roxygen2)
install.packages("roxygen2")
library(collardata)
devtools::load_all(".")
library(collardata)
devtools::load_all(".")
library(collardata)
devtools::install_github("foresthaes/collardata")
devtools::install_github("foresthaes/collardata")
devtools::install_github("foresthayes/collardata")
?read_files
install_github("huh/CollarDownloadeR")
devtools;:install_github("huh/CollarDownloadeR")
devtools::install_github("huh/CollarDownloadeR")
require(CollarDownloadeR)
scrape_ats(usr = ER5220BE, pwd = W8gL3A$P)
out <- scrape_ats(usr = ER5220BE, pwd = W8gL3A$P)
out <- scrape_ats(usr = "ER5220BE", pwd = "W8gL3A$P")
read_files("data/ATS")
read_files(data = "data/ATS")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("testthat", "covr", "usethis", "roxygen2")
ipak(packages)
usethis::use_r("convert_format")
devtools::load_all(".")
devtools::load_all(".")
require(roxygen2)
library(collardata)
devtools::install_github("foresthayes/collardata")
usethis::use_r("read_files")
# Edit a function:
usethis::use_r("convert_format")
devtools::load_all(".")
# Install and load packages:
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("testthat", "covr", "usethis", "roxygen2")
ipak(packages)
# Edit a function:
usethis::use_r("convert_format")
library(collardata)
